<UserControl x:Class="WPFAnimation.View.Clock"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WPFAnimation.View"
             xmlns:viewModel="clr-namespace:WPFAnimation.ViewModel"
             xmlns:converter="clr-namespace:WPFAnimation.Converter"
    mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        
        <Grid.Resources>
            <viewModel:CounterVM x:Key="counter"/>
            <converter:DateTimeToAngleConverter x:Key="converter"/>
            <Style TargetType="Line" x:Key="lineStyle">
                <Setter Property="StrokeThickness" Value="1.5"/>
                <Setter Property="Stroke" Value="Black"/>
            </Style>
        </Grid.Resources>

        <Canvas Margin="20" Width="300" Height="300">
            
            <Canvas.DataContext>
                <viewModel:CounterVM></viewModel:CounterVM>
            </Canvas.DataContext>
            
            <!-- Clock Animation -->
            <Canvas.RenderTransform>
                <SkewTransform CenterX="150" CenterY="150" x:Name="skew"/>
            </Canvas.RenderTransform>
            
            <Canvas.Triggers>
                <EventTrigger RoutedEvent="Canvas.Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="skew" Storyboard.TargetProperty="AngleX" Duration="0:0:1" From="-15" To="15" AutoReverse="True" RepeatBehavior="Forever" />
                            <DoubleAnimation Storyboard.TargetName="skew" Storyboard.TargetProperty="AngleY" Duration="0:0:1" From="-15" To="15" AutoReverse="True" RepeatBehavior="Forever" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Canvas.Triggers>
            
            <ItemsControl Name="Control">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Line X1="150" Y1="0" X2="150" Y2="300" StrokeDashArray="10, 280" Stroke="Black" StrokeThickness="2">
                            <Line.RenderTransform>
                                <RotateTransform CenterX="150" CenterY="150" Angle="{Binding}"/>
                            </Line.RenderTransform>
                        </Line>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            
            <!-- Clock form -->
            <Ellipse Width="300" Height="300" Stroke="Black" StrokeThickness="3">
            </Ellipse>
            <!-- hours -->
            <Line X1="150" Y1="150" X2="150" Y2="15" StrokeThickness="2">
                <Line.RenderTransform>
                    <RotateTransform CenterX="150" CenterY="150" Angle="{Binding Path=Now.Hour, Converter={StaticResource converter}, ConverterParameter=12}"></RotateTransform>
                </Line.RenderTransform>
            </Line>
            <!-- minutes -->
            <Line X1="150" Y1="150" X2="150" Y2="35" Stroke="Black" StrokeThickness="2">
                <Line.RenderTransform>
                    <RotateTransform CenterX="150" CenterY="150" Angle="{Binding Path=Now.Minute, Converter={StaticResource converter}, ConverterParameter=60}"></RotateTransform>
                </Line.RenderTransform>
            </Line>
            <!-- seconds -->
            <Line X1="150" Y1="150" X2="150" Y2="50" Stroke="Red">
                <Line.RenderTransform>
                    <RotateTransform CenterX="150" CenterY="150" Angle="{Binding Path=Now.Second, Converter={StaticResource converter}, ConverterParameter=60}"></RotateTransform>
                </Line.RenderTransform>
            </Line>
            
        </Canvas>
    </Grid>
</UserControl>
